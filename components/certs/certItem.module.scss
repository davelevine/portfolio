@import '../../styles/ui.scss'; // Adjust the path as needed

/* Card container styles */
.card {
  border-radius: 8px;
  padding: 25px;
  background-color: var(--background-card);
  transition: transform $transition-speed ease, box-shadow $transition-speed ease;
  border: 1px solid var(--border-card);
  margin-bottom: 25px;
  display: flex;
  flex-direction: column;
  text-align: center;
  min-height: 350px; // Set a minimum height to ensure consistency

  &:hover {
    transform: scale(1.02);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
  }

  h4 {
    color: var(--text-secondary);
    font-size: 1.15rem;
    margin-bottom: 1rem;
    cursor: pointer;
    min-height: 3rem; /* Set a minimum height for the title */
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center; /* Center the title */
  }
}

.cardContent {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  justify-content: flex-start; /* Align to the top */
  text-align: center; /* Center the content */
}

.cardContent p {
  color: var(--text-primary);
  margin-bottom: 1.5rem;
  min-height: 6rem; /* Set a minimum height for the excerpt */
  display: flex;
  align-items: center;
  justify-content: center;
}

.cardAction {
  display: flex;
  justify-content: space-around;
  align-items: center;
  margin-top: auto;
}

.cardAction button {
  color: var(--text-primary);
  background: none;
  border: none;
  cursor: pointer;
  font-size: inherit;
  font-weight: bold;
  text-decoration: none;
  padding: 0;
  transition: color $transition-speed ease, transform $transition-speed ease, text-decoration $transition-speed ease;
  display: flex;
  align-items: center;
}

.cardAction button:hover {
  color: var(--link-hover);
  transform: scale(1.1);
  text-decoration: underline;
}

.cardAction button i {
  color: var(--accent);
  margin-right: 5px;
  font-weight: normal;
}

.cardAction time {
  display: flex;
  align-items: center;
  color: var(--text-primary);
}

.cardAction time i {
  margin-right: 5px;
}

.expires, .expired {
  display: flex;
  align-items: center;
}

.expires i {
  color: var(--valid-cert);
  margin-right: 5px;
}

.expired i {
  color: var(--accent);
  margin-right: 5px;
}

@media only screen and (min-width: 768px) {
  .card {
    margin-bottom: unset;
  }
}

/* Modal Styles */
.modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: var(--background-card);
  padding: 0;
  z-index: 1000;
  width: 90%;
  height: auto;
  max-height: 95%;
  overflow: hidden;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-radius: 10px;
  animation: fadeIn $transition-speed ease-in-out;
}

@media (min-width: 768px) {
  .modal {
    width: 70%;
    max-height: 85%;
  }
}

@media (min-width: 1024px) {
  .modal {
    width: 60%;
    max-height: 80%;
  }
}

/* Overlay styles */
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.75);
  z-index: 999;
  animation: fadeIn $transition-speed ease-in-out;
}

/* Close button styles */
.closeButton {
  background: var(--background-card);
  border: none;
  font-size: 1.5rem;
  position: absolute;
  top: 10px;
  right: 10px;
  cursor: pointer;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  transition: background-color $transition-speed ease, transform $transition-speed ease;
}

.closeButton:hover {
  background-color: var(--background-secondary);
  transform: scale(1.1);
}

.closeButton:before {
  color: var(--text-primary);
}

/* Certificate image styles */
.certImage {
  display: block;
  max-width: 100%;
  max-height: 100%;
  width: auto;
  height: auto;
  margin: 0 auto;
  border-radius: 5px;
}

/* Fade-in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
